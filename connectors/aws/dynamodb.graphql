extend schema
  @link(
    url: "https://specs.apollo.dev/federation/v2.10"
    import: ["@key", "@requires", "@override", "@external", "@shareable"]
  )
  @link(
    url: "https://specs.apollo.dev/connect/v0.1"
    import: ["@source", "@connect"]
  )
  # https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_GetItem.html
  # See router.yaml for Sigv4 configuration
  @source(
    name: "dynamodb"
    http: { 
      # If you want to use multiple regions, see router.yaml for configuration based on environment variables
      baseURL: "https://dynamodb.us-east-1.amazonaws.com"
    }
  )

type Product {
  id: ID!
  name: String
  description: String
  image: String
}
type ProductConnection {
  pageInfo: PageInfo
  items: [Product]
}
type PageInfo {
  count: Int
  total: Int
  next: String
}
type Query {
  products(cursor: String = "", limit: Int = 5): ProductConnection
    @connect(
      source: "dynamodb"
      http: {
        POST: "/"
        body: """
        $args.cursor->match(
          [null, $({
            TableName: $('product-catalog'),
            Limit: $args.limit,
          })],
          ["", $({
            TableName: $('product-catalog'),
            Limit: $args.limit,
          })],
          [@, $({
            TableName: $('product-catalog'),
            Limit: $args.limit,
            ExclusiveStartKey: { id: { S: @ } }
          })]
        )
        """
        headers: [{ name: "X-Amz-Target", value: "DynamoDB_20120810.Scan" }]
      }
      selection: """
      pageInfo: {
        count: Count
        total: ScannedCount
        next: LastEvaluatedKey.id.S
      }
      items: $.Items {
        id: id.S
        name: name.S
        description: description.S
        image: url.S
      }
      """
    )
    product(id: ID!): Product
    # https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_GetItem.html
      @connect(
        source: "dynamodb"
        http: {
          POST: "/"
          body: """
          TableName: $('product-catalog')
          Key: {
            id: {
              S: $args.id
            }
          }
          """
          headers: [{ name: "X-Amz-Target", value: "DynamoDB_20120810.GetItem" }]
        }
        selection: """
        $.Item {
          id: id.S
          name: name.S
          description: description.S
          image: url.S
        }
        """
        entity: true
      )
}
